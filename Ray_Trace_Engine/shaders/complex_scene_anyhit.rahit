#version 460

#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_scalar_block_layout : require
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require

struct GeometryNode {
	uint64_t vertexBufferDeviceAddress;
	uint64_t indexBufferDeviceAddress;
	int textureIndexBaseColor;
	int textureIndexOcclusion;
};

hitAttributeEXT vec2 attribs;

layout(binding = 4, set = 0) buffer GeometryNodes { GeometryNode nodes[]; } geometryNodes;

layout(binding = 5, set = 0) uniform sampler2D textures[];

#include "complex_scene_bufferreferences.glsl"
#include "complex_scene_geometrytypes.glsl"
#include "complex_scene_random.glsl"

void main() {

	//if(gl_GeometryIndexEXT < 1){
	
		GeometryNode geometryNode = geometryNodes.nodes[gl_GeometryIndexEXT];
		
		if(nonuniformEXT(geometryNode.textureIndexBaseColor) > -1){
		Triangle tri = unpackTriangle(gl_PrimitiveID, 112);
	
	
		vec4 color = texture(textures[nonuniformEXT(geometryNode.textureIndexBaseColor)], tri.uv);
	
		if(color.a < 1.0f) {
			ignoreIntersectionEXT;
		}
	}
	//}

}